[tox]
envlist = oscap,content,install,product,sync,clean,depclean
skip_missing_interpreters = true
skipsdist = true

[base]
deps =
    pip>=22.1
    build
    cmake
    ninja

[testenv]
skip_install = true
install_command = pip install {opts} {packages}
#basepython= python3.9

[testenv:{oscap,content,install,product}]
envdir = {toxworkdir}/venv
# these tox env cmds share a virtual env using the following plugin
# https://github.com/masenf/tox-ignore-env-name-mismatch
runner = ignore_env_name_mismatch

description =
    {oscap,content}: Install required oscap lib or content dependencies into shared {env:PREFIX} path
    product: Run build_product to install a single product (default: openembedded)
    install: Install scap workbench into shared {env:PREFIX} path

allowlist_externals =
    bash

deps =
    {[base]deps}
    ext/ymltoxml
    #ext/pyserv
    -r ext/content/requirements-base.txt

setenv =
    CC = {env:CC:gcc}
    CXX = {env:CXX:g++}
    CPUS = {env:CPUS:4}
    {oscap,content,install,product}: WITH_RPATH = {env:LOCAL_INSTALL_WITH_RPATH:ON}
    BUILD_TYPE = {env:BUILD_TYPE:Release}
    PREFIX = {env:PREFIX:{envdir}}
    {content,install,product}: PYTHONPATH = {toxinidir}
    {content,install,product}: OPENSCAP_ROOT_DIR = {env:PREFIX:{envdir}}
    {content,product}: XSLT_PREFIX = {env:XSLT_PREFIX:{envdir}}
    PYTHONWARNINGS = ignore
    oscap: SRC_PATH = {env:L_SRC_PATH:ext/oscap}
    content: SRC_PATH = {env:C_SRC_PATH:ext/content}
    product: SRC_PATH = {env:C_SRC_PATH:ext/content}
    {content,install,product}: LD_LIBRARY_PATH = {env:LD_LIBRARY_PATH:{env:PREFIX}/lib{:}{env:PREFIX}/lib64}
    {content,install,product}: PKG_CONFIG_PATH = {env:PREFIX}/lib64/pkgconfig

passenv =
    CFLAGS
    CXXFLAGS
    LDFLAGS
    LD
    AR
    NM
    RANLIB
    PYTHON
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    CI
    XDG_*
    GITHUB*
    PIP_DOWNLOAD_CACHE

changedir =
    {oscap,content,product}: {env:SRC_PATH}

commands =
    oscap: cmake -G {posargs:"Unix Makefiles"} -S . -B build -DCMAKE_BUILD_TYPE={env:BUILD_TYPE} -DENABLE_TESTS=OFF -DCMAKE_INSTALL_PREFIX={env:PREFIX} -DBUILD_SHARED_LIBS=OFF -DLOCAL_INSTALL_WITH_RPATH={env:WITH_RPATH}
    content: cmake -G {posargs:"Unix Makefiles"} -S . -B build -DCMAKE_BUILD_TYPE={env:BUILD_TYPE} -DENABLE_TESTS=OFF -DCMAKE_INSTALL_PREFIX={env:PREFIX} -DLOCAL_INSTALL_WITH_RPATH={env:WITH_RPATH}
    install: cmake -G {posargs:"Unix Makefiles"} -S . -B build -DOPENSCAP_VERSION:STRING="1.3.10" -DOPENSCAP_LIBRARIES:PATH={env:PREFIX}/lib64/libopenscap.so -DOPENSCAP_INCLUDE_DIRS:PATH={env:PREFIX}/include/openscap -DCMAKE_BUILD_TYPE={env:BUILD_TYPE} -DLOCAL_INSTALL_WITH_RPATH={env:WITH_RPATH} -DCMAKE_INSTALL_PREFIX={env:PREFIX}
    cmake --build build -j {env:CPUS} --target install
    install: bash -c 'oscap --version | head -n1'
    product: bash {toxinidir}/ext/content/build_product {posargs:"openembedded"}

[testenv:sync]
skip_install = true
description =
    Install repolite and use it for handling workflow deps => openscap, SSG, python tools

passenv =
    REPO_CFG
    DISPLAY
    XAUTHORITY
    HOME
    USERNAME
    USER
    CI
    LANG
    LC_COLLATE
    SSH_*
    GID
    UID
    XDG_*
    PIP_DOWNLOAD_CACHE

deps =
    # logging_tree
    pip>=22.1
    repolite @ https://github.com/sarnold/repolite/releases/download/0.5.1/repolite-0.5.1-py3-none-any.whl

commands =
    repolite {posargs:--quiet}

[testenv:{clean,depclean}]
# these tox env cmds share a virtual env using the following plugin
# https://github.com/masenf/tox-ignore-env-name-mismatch
envdir = {toxworkdir}/clean
runner = ignore_env_name_mismatch
skip_install = true

description =
    clean: Clean the cmake build tree
    depclean: Clean the dependent cmake build trees

setenv =
    depclean: L_SRC_PATH = {env:L_SRC_PATH:ext/oscap}
    depclean: C_SRC_PATH = {env:C_SRC_PATH:ext/content}

allowlist_externals =
    bash

deps =
    pip>=21.1

commands =
    clean: bash -c 'rm -rf .tox/venv build/* dist/ __pycache__/'
    depclean: bash -c 'rm -rf {env:L_SRC_PATH}/build/* {env:C_SRC_PATH}/build/*'
